//                 ....
//             ....      ..
//          ...           .
//        ..        .......
//     ...          .......
//   ...          .. .......
//  ..          ..     .......
// ..          ..        ......
// ..         ..          .......
// ..        ..            .... ..
//  ..     ..                .......
//                            ... ...
//                              ......
//                               .......
//                                 ......
//                                  ......
//                                   .......
//                                     ......
//                                      .......
//                                       .......
//                                         ......                 ......
//                                          .......           ........ ..
//                                            ......      ........ ........
//                                             ....... ............ ........
//                                              .............................
//                                              ...................... ........
//                                           ...................................
//                                       ................................ .......
//                                    ............................................
//                                   ............................................
//                                 ............................................
//                                 ..........................................
//                                  ......................................
//                                   ..................................
//                                     .............................
//                                      .........................
//                                        .........................
//                                   ................................
//                                   ..............................
//                                      ....................
#include<bits/stdc++.h>
using namespace std;
#define int long long
#define io ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define mod 1000000007
int depth=1;
vector<int> v[100005];
int dis[100005]={0};
void create_tree(int left,int right,vector<int>&arr,int depth){
    int pos=-1;
    int maximum=LLONG_MIN;
    if(left>right)
    return;
    for(int i=left;i<=right;i++){
        if(arr[i]>maximum){
            maximum=arr[i];
            pos=i;
        }
    }
    //v[previous].push_back(maximum);
    dis[maximum]=depth;
    create_tree(left,pos-1,arr,depth+1);
    create_tree(pos+1,right,arr,depth+1);
    
}
int32_t main(){
    io;
    int t=1;
    cin>>t;
    while(t--){
      int n;
      cin>>n;
      depth=1;
      vector<int>arr(n);
      for(int i=0;i<n;i++){
      cin>>arr[i];
      dis[i]=0;
      }
      dis[0]=-1;
      create_tree(0,n-1,arr,1);
      for(int i=0;i<n;i++)
      cout<<dis[arr[i]]-1<<" ";
      cout<<endl;
    }
      
}